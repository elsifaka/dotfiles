let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
inoremap <silent> <S-Tab> =BackwardsSnippet()
inoremap <C-Tab> 	
map! <S-Insert> <MiddleMouse>
snoremap <silent> 	 i<Right>=TriggerSnippet()
vmap  <Plug>TwitvimVisual
snoremap  b<BS>
snoremap % b<BS>%
snoremap ' b<BS>'
nmap ;ca <Plug>NERDCommenterAltDelims
xmap ;cu <Plug>NERDCommenterUncomment
nmap ;cu <Plug>NERDCommenterUncomment
xmap ;cb <Plug>NERDCommenterAlignBoth
nmap ;cb <Plug>NERDCommenterAlignBoth
xmap ;cl <Plug>NERDCommenterAlignLeft
nmap ;cl <Plug>NERDCommenterAlignLeft
nmap ;cA <Plug>NERDCommenterAppend
xmap ;cy <Plug>NERDCommenterYank
nmap ;cy <Plug>NERDCommenterYank
xmap ;cs <Plug>NERDCommenterSexy
nmap ;cs <Plug>NERDCommenterSexy
xmap ;ci <Plug>NERDCommenterInvert
nmap ;ci <Plug>NERDCommenterInvert
nmap ;c$ <Plug>NERDCommenterToEOL
xmap ;cn <Plug>NERDCommenterNested
nmap ;cn <Plug>NERDCommenterNested
xmap ;cm <Plug>NERDCommenterMinimal
nmap ;cm <Plug>NERDCommenterMinimal
xmap ;c  <Plug>NERDCommenterToggle
nmap ;c  <Plug>NERDCommenterToggle
xmap ;cc <Plug>NERDCommenterComment
nmap ;cc <Plug>NERDCommenterComment
nnoremap ;gp :GitPullRebase
nnoremap ;gc :GitCommit
nnoremap ;gA :GitAdd <cfile>
nnoremap ;ga :GitAdd
nnoremap ;gl :GitLog
nnoremap ;gs :GitStatus
nnoremap ;gD :GitDiff --cached
nnoremap ;gd :GitDiff
map ;d :execute 'NERDTreeToggle ' . getcwd()
inoremap Ã¯ o
xmap S <Plug>VSurround
snoremap U b<BS>U
nmap [YY <Plug>unimpairedLineBase64Encode
xmap [Y <Plug>unimpairedBase64Encode
nmap [Y <Plug>unimpairedBase64Encode
nmap [xx <Plug>unimpairedLineXmlEncode
xmap [x <Plug>unimpairedXmlEncode
nmap [x <Plug>unimpairedXmlEncode
nmap [uu <Plug>unimpairedLineUrlEncode
xmap [u <Plug>unimpairedUrlEncode
nmap [u <Plug>unimpairedUrlEncode
nmap [yy <Plug>unimpairedLineStringEncode
xmap [y <Plug>unimpairedStringEncode
nmap [y <Plug>unimpairedStringEncode
xmap [e <Plug>unimpairedMoveUp
nmap [e <Plug>unimpairedMoveUp
nmap [  <Plug>unimpairedBlankUp
omap [n <Plug>unimpairedContextPrevious
nmap [n <Plug>unimpairedContextPrevious
nmap [o <Plug>unimpairedOPrevious
nmap <silent> [T <Plug>unimpairedTFirst
nmap <silent> [t <Plug>unimpairedTPrevious
nmap <silent> [Q <Plug>unimpairedQFirst
nmap <silent> [q <Plug>unimpairedQPrevious
nmap <silent> [L <Plug>unimpairedLFirst
nmap <silent> [l <Plug>unimpairedLPrevious
nmap <silent> [B <Plug>unimpairedBFirst
nmap <silent> [b <Plug>unimpairedBPrevious
nmap <silent> [A <Plug>unimpairedAFirst
nmap <silent> [a <Plug>unimpairedAPrevious
vmap [% [%m'gv``
snoremap \ b<BS>\
nmap ]YY <Plug>unimpairedLineBase64Decode
xmap ]Y <Plug>unimpairedBase64Decode
nmap ]Y <Plug>unimpairedBase64Decode
nmap ]xx <Plug>unimpairedLineXmlDecode
xmap ]x <Plug>unimpairedXmlDecode
nmap ]x <Plug>unimpairedXmlDecode
nmap ]uu <Plug>unimpairedLineUrlDecode
xmap ]u <Plug>unimpairedUrlDecode
nmap ]u <Plug>unimpairedUrlDecode
nmap ]yy <Plug>unimpairedLineStringDecode
xmap ]y <Plug>unimpairedStringDecode
nmap ]y <Plug>unimpairedStringDecode
xmap ]e <Plug>unimpairedMoveDown
nmap ]e <Plug>unimpairedMoveDown
nmap ]  <Plug>unimpairedBlankDown
omap ]n <Plug>unimpairedContextNext
nmap ]n <Plug>unimpairedContextNext
nmap ]o <Plug>unimpairedONext
nmap <silent> ]T <Plug>unimpairedTLast
nmap <silent> ]t <Plug>unimpairedTNext
nmap <silent> ]Q <Plug>unimpairedQLast
nmap <silent> ]q <Plug>unimpairedQNext
nmap <silent> ]L <Plug>unimpairedLLast
nmap <silent> ]l <Plug>unimpairedLNext
nmap <silent> ]B <Plug>unimpairedBLast
nmap <silent> ]b <Plug>unimpairedBNext
nmap <silent> ]A <Plug>unimpairedALast
nmap <silent> ]a <Plug>unimpairedANext
vmap ]% ]%m'gv``
snoremap ^ b<BS>^
snoremap ` b<BS>`
vmap a% [%v]%
nmap cs <Plug>Csurround
nmap cr <Plug>Coerce
nmap ds <Plug>Dsurround
nmap gx <Plug>NetrwBrowseX
xmap gS <Plug>VgSurround
xnoremap <silent> s :echoerr 'surround.vim: Visual mode s has been removed in favor of S'
nmap ySS <Plug>YSsurround
nmap ySs <Plug>YSsurround
nmap yss <Plug>Yssurround
nmap yS <Plug>YSurround
nmap ys <Plug>Ysurround
snoremap <Left> bi
snoremap <Right> a
snoremap <BS> b<BS>
snoremap <silent> <S-Tab> i<Right>=BackwardsSnippet()
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
xnoremap <silent> <Plug>unimpairedMoveDown :exe 'normal! m`'|exe '''<,''>move''>+'.v:count1``
xnoremap <silent> <Plug>unimpairedMoveUp :exe 'normal! m`'|exe '''<,''>move--'.v:count1``
nmap <silent> <Plug>unimpairedTLast :exe "tlast ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedTFirst :exe "tfirst ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedTNext :exe "tnext ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedTPrevious :exe "tprevious ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedQLast :exe "clast ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedQFirst :exe "cfirst ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedQNext :exe "cnext ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedQPrevious :exe "cprevious ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedLLast :exe "llast ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedLFirst :exe "lfirst ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedLNext :exe "lnext ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedLPrevious :exe "lprevious ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedBLast :exe "blast ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedBFirst :exe "bfirst ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedBNext :exe "bnext ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedBPrevious :exe "bprevious ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedALast :exe "last ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedAFirst :exe "first ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedANext :exe "next ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedAPrevious :exe "previous ".(v:count ? v:count : "")
xnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment("x", "Uncomment")
nnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment("n", "Uncomment")
xnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment("x", "AlignBoth")
nnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment("n", "AlignBoth")
xnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment("x", "AlignLeft")
nnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment("n", "AlignLeft")
nnoremap <silent> <Plug>NERDCommenterAppend :call NERDComment("n", "Append")
xnoremap <silent> <Plug>NERDCommenterYank :call NERDComment("x", "Yank")
nnoremap <silent> <Plug>NERDCommenterYank :call NERDComment("n", "Yank")
xnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment("x", "Sexy")
nnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment("n", "Sexy")
xnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment("x", "Invert")
nnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment("n", "Invert")
nnoremap <silent> <Plug>NERDCommenterToEOL :call NERDComment("n", "ToEOL")
xnoremap <silent> <Plug>NERDCommenterNested :call NERDComment("x", "Nested")
nnoremap <silent> <Plug>NERDCommenterNested :call NERDComment("n", "Nested")
xnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment("x", "Minimal")
nnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment("n", "Minimal")
xnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment("x", "Toggle")
nnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment("n", "Toggle")
xnoremap <silent> <Plug>NERDCommenterComment :call NERDComment("x", "Comment")
nnoremap <silent> <Plug>NERDCommenterComment :call NERDComment("n", "Comment")
map <S-Insert> <MiddleMouse>
imap S <Plug>ISurround
imap s <Plug>Isurround
inoremap <silent> 	 =TriggerSnippet()
imap  <Plug>DiscretionaryEnd
inoremap <silent> 	 =ShowAvailableSnips()
imap  <Plug>Isurround
imap  <Plug>AlwaysEnd
vmap Ã´ <Plug>TwitvimVisual
map <silent> Ã® :cn 
map <silent> Ã° :cp 
let &cpo=s:cpo_save
unlet s:cpo_save
set autoindent
set background=dark
set backspace=indent,eol,start
set binary
set fileencodings=ucs-bom,utf-8,default,latin1
set grepformat=%f:%l:%m
set grepprg=ack
set helplang=en
set history=50
set iminsert=0
set incsearch
set iskeyword=@,48-57,_,192-255,$
set nomodeline
set mouse=a
set ruler
set runtimepath=~/.vim,~/.vim/bundle/css3,~/.vim/bundle/exvim,~/.vim/bundle/git-vim,~/.vim/bundle/html5.vim,~/.vim/bundle/nerdcommenter,~/.vim/bundle/nerdtree,~/.vim/bundle/scss-syntax.vim,~/.vim/bundle/sessionman.vim,~/.vim/bundle/snipmate.vim,~/.vim/bundle/tlib_vim,~/.vim/bundle/viki_vim,~/.vim/bundle/vim-abolish,~/.vim/bundle/vim-cucumber,~/.vim/bundle/vim-endwise,~/.vim/bundle/vim-fugitive,~/.vim/bundle/vim-git-branch-info,~/.vim/bundle/vim-haml,~/.vim/bundle/vim-pathogen,~/.vim/bundle/vim-rails,~/.vim/bundle/vim-repeat,~/.vim/bundle/vim-ruby,~/.vim/bundle/vim-surround,~/.vim/bundle/vim-unimpaired,/usr/share/vim/vimfiles,/usr/share/vim/vim73,/usr/share/vim/vimfiles/after,~/.vim/bundle/snipmate.vim/after,~/.vim/after
set sessionoptions=blank,buffers,curdir,folds,help,options,resize,tabpages,winsize,winpos
set shiftwidth=2
set showcmd
set showmatch
set smarttab
set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=%-14.(%l,%c%V%)\ %P
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc
set tabstop=2
set termencoding=utf-8
set viminfo=!,'100,<50,s10,h
set wildmenu
set window=46
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Documents/workspace/reusable_containers_demo_app
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +27 lib/reusable_containers/parameters_overrider.rb
badd +10 app/models/entry.rb
badd +20 app/controllers/application_controller.rb
badd +65 config/routes.rb
badd +2 app/controllers/administration_controller.rb
badd +1 app/views/administration/index.html.erb
badd +18 app/views/layouts/application.html.erb
badd +6 app/helpers/application_helper.rb
badd +2 app/views/layouts/public/default.html.erb
badd +44 db/schema.rb
badd +2 app/models/blog_post.rb
badd +4 app/views/blog_posts/show.html.erb
badd +16 app/views/entries/show.html.erb
badd +14 db/seeds.rb
badd +39 app/views/blog_posts/index.html.erb
badd +2 app/models/navigation_entry.rb
badd +6 app/models/navigation.rb
badd +11 app/views/navigation_entries/_form.html.erb
badd +3 app/models/container_navigation.rb
badd +20 app/views/container_navigations/_form.html.erb
badd +0 app/models/container.rb
badd +0 app/views/navigations/_navigation.html.erb
badd +1 app/views/misc/homepage.html.erb
silent! argdel *
set lines=47 columns=155
winpos 0 19
edit app/views/blog_posts/index.html.erb
set splitbelow splitright
wincmd _ | wincmd |
split
1wincmd k
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd w
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe '1resize ' . ((&lines * 10 + 23) / 47)
exe 'vert 1resize ' . ((&columns * 77 + 77) / 155)
exe '2resize ' . ((&lines * 10 + 23) / 47)
exe 'vert 2resize ' . ((&columns * 77 + 77) / 155)
exe '3resize ' . ((&lines * 34 + 23) / 47)
exe 'vert 3resize ' . ((&columns * 77 + 77) / 155)
exe '4resize ' . ((&lines * 34 + 23) / 47)
exe 'vert 4resize ' . ((&columns * 77 + 77) / 155)
argglobal
let s:cpo_save=&cpo
set cpo&vim
nmap <buffer> gf <Plug>RailsTabFind
nmap <buffer> f <Plug>RailsSplitFind
nnoremap <buffer> <silent> g} :exe        "ptjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> } :exe          "ptag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g] :exe      "stselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe        "stjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> ] :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe  v:count1."tag =RubyCursorIdentifier()"
nmap <buffer> gf <Plug>RailsFind
nnoremap <buffer> <silent> g] :exe       "tselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe         "tjump =RubyCursorIdentifier()"
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=RubyBalloonexpr()
setlocal binary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=:#
setlocal commentstring=<%#%s%>
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=syntaxcomplete#Complete
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'eruby'
setlocal filetype=eruby
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=2
setlocal include=^\\s*\\<\\(load\\>\\|require\\>\\|autoload\\s*:\\=[\"']\\=\\h\\w*[\"']\\=,\\)
setlocal includeexpr=RailsIncludeexpr()
setlocal indentexpr=GetErubyIndent()
setlocal indentkeys=o,O,*<Return>,<>>,{,},0),0],o,O,!^F,=end,=else,=elsif,=rescue,=ensure,=when
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,$
setlocal keywordprg=ri\ -T
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:],<:>
setlocal nomodeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=rubycomplete#Complete
setlocal path=~/Documents/workspace/reusable_containers_demo_app,~/Documents/workspace/reusable_containers_demo_app/app,~/Documents/workspace/reusable_containers_demo_app/app/models,~/Documents/workspace/reusable_containers_demo_app/app/controllers,~/Documents/workspace/reusable_containers_demo_app/app/helpers,~/Documents/workspace/reusable_containers_demo_app/config,~/Documents/workspace/reusable_containers_demo_app/lib,~/Documents/workspace/reusable_containers_demo_app/app/views,~/Documents/workspace/reusable_containers_demo_app/app/views/blog_posts,~/Documents/workspace/reusable_containers_demo_app/public,~/Documents/workspace/reusable_containers_demo_app/test,~/Documents/workspace/reusable_containers_demo_app/test/unit,~/Documents/workspace/reusable_containers_demo_app/test/functional,~/Documents/workspace/reusable_containers_demo_app/test/integration,~/Documents/workspace/reusable_containers_demo_app/app/*,~/Documents/workspace/reusable_containers_demo_app/vendor,~/Documents/workspace/reusable_containers_demo_app/vendor/plugins/*/lib,~/Documents/workspace/reusable_containers_demo_app/vendor/plugins/*/test,~/Documents/workspace/reusable_containers_demo_app/vendor/rails/*/lib,~/Documents/workspace/reusable_containers_demo_app/vendor/rails/*/test,/usr/lib/ruby/site_ruby/1.9.1,/usr/lib/ruby/site_ruby/1.9.1/x86_64-linux,/usr/lib/ruby/site_ruby,/usr/lib/ruby/vendor_ruby/1.9.1,/usr/lib/ruby/vendor_ruby/1.9.1/x86_64-linux,/usr/lib/ruby/vendor_ruby,/usr/lib/ruby/1.9.1,/usr/lib/ruby/1.9.1/x86_64-linux
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=2
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=.rb,.rhtml,.erb,.rxml,.builder,.rjs,.mab,.liquid,.haml,.dryml,.mn,.slim
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'eruby'
setlocal syntax=eruby
endif
setlocal tabstop=2
setlocal tags=~/Documents/workspace/reusable_containers_demo_app/tmp/tags,~/Documents/workspace/reusable_containers_demo_app/.git/eruby.tags,~/Documents/workspace/reusable_containers_demo_app/.git/tags,,/usr/lib/ruby/site_ruby/1.9.1/tags,/usr/lib/ruby/site_ruby/1.9.1/x86_64-linux/tags,/usr/lib/ruby/site_ruby/tags,/usr/lib/ruby/vendor_ruby/1.9.1/tags,/usr/lib/ruby/vendor_ruby/1.9.1/x86_64-linux/tags,/usr/lib/ruby/vendor_ruby/tags,/usr/lib/ruby/1.9.1/tags,/usr/lib/ruby/1.9.1/x86_64-linux/tags,~/Documents/workspace/reusable_containers_demo_app/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 4 - ((1 * winheight(0) + 5) / 10)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
4
normal! 076l
wincmd w
argglobal
edit app/models/container.rb
let s:cpo_save=&cpo
set cpo&vim
nmap <buffer> gf <Plug>RailsTabFind
nmap <buffer> f <Plug>RailsSplitFind
nnoremap <buffer> <silent> g} :exe        "ptjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> } :exe          "ptag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g] :exe      "stselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe        "stjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> ] :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe  v:count1."tag =RubyCursorIdentifier()"
nmap <buffer> gf <Plug>RailsFind
nnoremap <buffer> <silent> g] :exe       "tselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe         "tjump =RubyCursorIdentifier()"
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=RubyBalloonexpr()
setlocal binary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=:#
setlocal commentstring=#\ %s
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=syntaxcomplete#Complete
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=^\\s*def\\s\\+\\(self\\.\\)\\=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'ruby'
setlocal filetype=ruby
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=2
setlocal include=^\\s*\\<\\(load\\>\\|require\\>\\|autoload\\s*:\\=[\"']\\=\\h\\w*[\"']\\=,\\)
setlocal includeexpr=RailsIncludeexpr()
setlocal indentexpr=GetRubyIndent(v:lnum)
setlocal indentkeys=0{,0},0),0],!^F,o,O,e,=end,=else,=elsif,=when,=ensure,=rescue,==begin,==end
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,$
setlocal keywordprg=ri\ -T
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal nomodeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=rubycomplete#Complete
setlocal path=~/Documents/workspace/reusable_containers_demo_app,~/Documents/workspace/reusable_containers_demo_app/app,~/Documents/workspace/reusable_containers_demo_app/app/models,~/Documents/workspace/reusable_containers_demo_app/app/controllers,~/Documents/workspace/reusable_containers_demo_app/app/helpers,~/Documents/workspace/reusable_containers_demo_app/config,~/Documents/workspace/reusable_containers_demo_app/lib,~/Documents/workspace/reusable_containers_demo_app/app/views,~/Documents/workspace/reusable_containers_demo_app/test,~/Documents/workspace/reusable_containers_demo_app/test/unit,~/Documents/workspace/reusable_containers_demo_app/test/functional,~/Documents/workspace/reusable_containers_demo_app/test/integration,~/Documents/workspace/reusable_containers_demo_app/app/*,~/Documents/workspace/reusable_containers_demo_app/vendor,~/Documents/workspace/reusable_containers_demo_app/vendor/plugins/*/lib,~/Documents/workspace/reusable_containers_demo_app/vendor/plugins/*/test,~/Documents/workspace/reusable_containers_demo_app/vendor/rails/*/lib,~/Documents/workspace/reusable_containers_demo_app/vendor/rails/*/test,/usr/lib/ruby/site_ruby/1.9.1,/usr/lib/ruby/site_ruby/1.9.1/x86_64-linux,/usr/lib/ruby/site_ruby,/usr/lib/ruby/vendor_ruby/1.9.1,/usr/lib/ruby/vendor_ruby/1.9.1/x86_64-linux,/usr/lib/ruby/vendor_ruby,/usr/lib/ruby/1.9.1,/usr/lib/ruby/1.9.1/x86_64-linux
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=2
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=.rb,.rhtml,.erb,.rxml,.builder,.rjs,.mab,.liquid,.haml,.dryml,.mn,.slim
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'ruby'
setlocal syntax=ruby
endif
setlocal tabstop=2
setlocal tags=~/Documents/workspace/reusable_containers_demo_app/tmp/tags,~/Documents/workspace/reusable_containers_demo_app/.git/ruby.tags,~/Documents/workspace/reusable_containers_demo_app/.git/tags,./tags,./TAGS,tags,TAGS,/usr/lib/ruby/site_ruby/1.9.1/tags,/usr/lib/ruby/site_ruby/1.9.1/x86_64-linux/tags,/usr/lib/ruby/site_ruby/tags,/usr/lib/ruby/vendor_ruby/1.9.1/tags,/usr/lib/ruby/vendor_ruby/1.9.1/x86_64-linux/tags,/usr/lib/ruby/vendor_ruby/tags,/usr/lib/ruby/1.9.1/tags,/usr/lib/ruby/1.9.1/x86_64-linux/tags,~/Documents/workspace/reusable_containers_demo_app/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 5 - ((2 * winheight(0) + 5) / 10)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
5
normal! 055l
wincmd w
argglobal
edit app/views/navigations/_navigation.html.erb
let s:cpo_save=&cpo
set cpo&vim
nmap <buffer> gf <Plug>RailsTabFind
nmap <buffer> f <Plug>RailsSplitFind
nnoremap <buffer> <silent> g} :exe        "ptjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> } :exe          "ptag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g] :exe      "stselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe        "stjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> ] :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe  v:count1."tag =RubyCursorIdentifier()"
nmap <buffer> gf <Plug>RailsFind
nnoremap <buffer> <silent> g] :exe       "tselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe         "tjump =RubyCursorIdentifier()"
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=RubyBalloonexpr()
setlocal binary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=:#
setlocal commentstring=<%#%s%>
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=syntaxcomplete#Complete
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'eruby'
setlocal filetype=eruby
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=2
setlocal include=^\\s*\\<\\(load\\>\\|require\\>\\|autoload\\s*:\\=[\"']\\=\\h\\w*[\"']\\=,\\)
setlocal includeexpr=RailsIncludeexpr()
setlocal indentexpr=GetErubyIndent()
setlocal indentkeys=o,O,*<Return>,<>>,{,},0),0],o,O,!^F,=end,=else,=elsif,=rescue,=ensure,=when
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,$
setlocal keywordprg=ri\ -T
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:],<:>
setlocal nomodeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=rubycomplete#Complete
setlocal path=~/Documents/workspace/reusable_containers_demo_app,~/Documents/workspace/reusable_containers_demo_app/app,~/Documents/workspace/reusable_containers_demo_app/app/models,~/Documents/workspace/reusable_containers_demo_app/app/controllers,~/Documents/workspace/reusable_containers_demo_app/app/helpers,~/Documents/workspace/reusable_containers_demo_app/config,~/Documents/workspace/reusable_containers_demo_app/lib,~/Documents/workspace/reusable_containers_demo_app/app/views,~/Documents/workspace/reusable_containers_demo_app/app/views/navigations,~/Documents/workspace/reusable_containers_demo_app/public,~/Documents/workspace/reusable_containers_demo_app/test,~/Documents/workspace/reusable_containers_demo_app/test/unit,~/Documents/workspace/reusable_containers_demo_app/test/functional,~/Documents/workspace/reusable_containers_demo_app/test/integration,~/Documents/workspace/reusable_containers_demo_app/app/*,~/Documents/workspace/reusable_containers_demo_app/vendor,~/Documents/workspace/reusable_containers_demo_app/vendor/plugins/*/lib,~/Documents/workspace/reusable_containers_demo_app/vendor/plugins/*/test,~/Documents/workspace/reusable_containers_demo_app/vendor/rails/*/lib,~/Documents/workspace/reusable_containers_demo_app/vendor/rails/*/test,/usr/lib/ruby/site_ruby/1.9.1,/usr/lib/ruby/site_ruby/1.9.1/x86_64-linux,/usr/lib/ruby/site_ruby,/usr/lib/ruby/vendor_ruby/1.9.1,/usr/lib/ruby/vendor_ruby/1.9.1/x86_64-linux,/usr/lib/ruby/vendor_ruby,/usr/lib/ruby/1.9.1,/usr/lib/ruby/1.9.1/x86_64-linux
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=2
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=.rb,.rhtml,.erb,.rxml,.builder,.rjs,.mab,.liquid,.haml,.dryml,.mn,.slim
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'eruby'
setlocal syntax=eruby
endif
setlocal tabstop=2
setlocal tags=~/Documents/workspace/reusable_containers_demo_app/tmp/tags,~/Documents/workspace/reusable_containers_demo_app/.git/eruby.tags,~/Documents/workspace/reusable_containers_demo_app/.git/tags,,/usr/lib/ruby/site_ruby/1.9.1/tags,/usr/lib/ruby/site_ruby/1.9.1/x86_64-linux/tags,/usr/lib/ruby/site_ruby/tags,/usr/lib/ruby/vendor_ruby/1.9.1/tags,/usr/lib/ruby/vendor_ruby/1.9.1/x86_64-linux/tags,/usr/lib/ruby/vendor_ruby/tags,/usr/lib/ruby/1.9.1/tags,/usr/lib/ruby/1.9.1/x86_64-linux/tags,~/Documents/workspace/reusable_containers_demo_app/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 6 - ((5 * winheight(0) + 17) / 34)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
6
normal! 06l
wincmd w
argglobal
edit app/views/layouts/public/default.html.erb
nnoremap <buffer> <silent> ] :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe        "stjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g] :exe      "stselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> } :exe          "ptag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g} :exe        "ptjump =RubyCursorIdentifier()"
let s:cpo_save=&cpo
set cpo&vim
nmap <buffer> f <Plug>RailsSplitFind
nmap <buffer> gf <Plug>RailsTabFind
nnoremap <buffer> <silent>  :exe  v:count1."tag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe         "tjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g] :exe       "tselect =RubyCursorIdentifier()"
nmap <buffer> gf <Plug>RailsFind
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=RubyBalloonexpr()
setlocal binary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=:#
setlocal commentstring=<%#%s%>
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=syntaxcomplete#Complete
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'eruby'
setlocal filetype=eruby
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=2
setlocal include=^\\s*\\<\\(load\\>\\|require\\>\\|autoload\\s*:\\=[\"']\\=\\h\\w*[\"']\\=,\\)
setlocal includeexpr=RailsIncludeexpr()
setlocal indentexpr=GetErubyIndent()
setlocal indentkeys=o,O,*<Return>,<>>,{,},0),0],o,O,!^F,=end,=else,=elsif,=rescue,=ensure,=when
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,$
setlocal keywordprg=ri\ -T
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:],<:>
setlocal nomodeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=rubycomplete#Complete
setlocal path=~/Documents/workspace/reusable_containers_demo_app,~/Documents/workspace/reusable_containers_demo_app/app,~/Documents/workspace/reusable_containers_demo_app/app/models,~/Documents/workspace/reusable_containers_demo_app/app/controllers,~/Documents/workspace/reusable_containers_demo_app/app/helpers,~/Documents/workspace/reusable_containers_demo_app/config,~/Documents/workspace/reusable_containers_demo_app/lib,~/Documents/workspace/reusable_containers_demo_app/app/views,~/Documents/workspace/reusable_containers_demo_app/app/views/public/default,~/Documents/workspace/reusable_containers_demo_app/public,~/Documents/workspace/reusable_containers_demo_app/test,~/Documents/workspace/reusable_containers_demo_app/test/unit,~/Documents/workspace/reusable_containers_demo_app/test/functional,~/Documents/workspace/reusable_containers_demo_app/test/integration,~/Documents/workspace/reusable_containers_demo_app/app/*,~/Documents/workspace/reusable_containers_demo_app/vendor,~/Documents/workspace/reusable_containers_demo_app/vendor/plugins/*/lib,~/Documents/workspace/reusable_containers_demo_app/vendor/plugins/*/test,~/Documents/workspace/reusable_containers_demo_app/vendor/rails/*/lib,~/Documents/workspace/reusable_containers_demo_app/vendor/rails/*/test,/usr/lib/ruby/site_ruby/1.9.1,/usr/lib/ruby/site_ruby/1.9.1/x86_64-linux,/usr/lib/ruby/site_ruby,/usr/lib/ruby/vendor_ruby/1.9.1,/usr/lib/ruby/vendor_ruby/1.9.1/x86_64-linux,/usr/lib/ruby/vendor_ruby,/usr/lib/ruby/1.9.1,/usr/lib/ruby/1.9.1/x86_64-linux
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=2
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=.rb,.rhtml,.erb,.rxml,.builder,.rjs,.mab,.liquid,.haml,.dryml,.mn,.slim
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'eruby'
setlocal syntax=eruby
endif
setlocal tabstop=2
setlocal tags=~/Documents/workspace/reusable_containers_demo_app/tmp/tags,~/Documents/workspace/reusable_containers_demo_app/.git/eruby.tags,~/Documents/workspace/reusable_containers_demo_app/.git/tags,,/usr/lib/ruby/site_ruby/1.9.1/tags,/usr/lib/ruby/site_ruby/1.9.1/x86_64-linux/tags,/usr/lib/ruby/site_ruby/tags,/usr/lib/ruby/vendor_ruby/1.9.1/tags,/usr/lib/ruby/vendor_ruby/1.9.1/x86_64-linux/tags,/usr/lib/ruby/vendor_ruby/tags,/usr/lib/ruby/1.9.1/tags,/usr/lib/ruby/1.9.1/x86_64-linux/tags,~/Documents/workspace/reusable_containers_demo_app/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 16 - ((15 * winheight(0) + 17) / 34)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
16
normal! 046l
wincmd w
exe '1resize ' . ((&lines * 10 + 23) / 47)
exe 'vert 1resize ' . ((&columns * 77 + 77) / 155)
exe '2resize ' . ((&lines * 10 + 23) / 47)
exe 'vert 2resize ' . ((&columns * 77 + 77) / 155)
exe '3resize ' . ((&lines * 34 + 23) / 47)
exe 'vert 3resize ' . ((&columns * 77 + 77) / 155)
exe '4resize ' . ((&lines * 34 + 23) / 47)
exe 'vert 4resize ' . ((&columns * 77 + 77) / 155)
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
